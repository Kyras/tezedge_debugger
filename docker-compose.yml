version: '3'

services:

  #explorer:
  #  image: simplestakingcom/tezedge-explorer:v0.6.0
  #  environment:
  #    - 'API=[{"id":"dev.ocaml","name":"ocaml.node","http":"http://ocaml-node:8732","debugger":"http://ocaml-debugger:17732","ws":false},{"id":"dev.rust","name":"rust.node","http":"http://rust-node:18732","debugger":"http://rust-debugger:17732","ws":"ws://rust-node:4927"}]'
  #  ports:
  #    - '8080:80'

  rust-debugger:
    image: simplestakingcom/tezedge-debugger:v0.3.2
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    environment:
      - RUST_BACKTRACE=1
      - P2P_PORT=9732
    volumes:
      - 'rust-shared-data:/tmp/volume'
      - '/sys/kernel/debug:/sys/kernel/debug:rw'
    ports:
      - '10001:13131/udp'  # debugger syslog port
    entrypoint: ./tezedge-debugger

  rust-node:
    image: simplestakingcom/tezedge:v0.9.1
    depends_on:
      - rust-debugger
    logging:
      # Produce syslogs instead of terminal logs
      driver: 'syslog'
      options:
        # Send the logs to syslog (UDP only) server (running on debugger)
        syslog-address: "udp://0.0.0.0:10001"  # Port must match debugger syslog port in 'ports' section
        # Always in same RFC 5424 format (with microseconds precision)
        syslog-format: "rfc5424micro"
    volumes:
      - 'rust-shared-data:/tmp/tezedge'
    ports:
      # should be equal inside docker and outside, because the node tells this port in its connection message,
      # that is how peers can connect to it later
      - '9732:9732'

  ocaml-debugger:
    image: simplestakingcom/tezedge-debugger:v0.3.2
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    environment:
      - RUST_BACKTRACE=1
      - P2P_PORT=9733
    volumes:
      - 'ocaml-shared-data:/tmp/volume'
      - '/sys/kernel/debug:/sys/kernel/debug:rw'
    ports:
      - '11001:13131/udp'  # debugger syslog port
    entrypoint: ./tezedge-debugger

  ocaml-node:
    image: tezos/tezos:v7.0
    depends_on:
      - ocaml-debugger
    entrypoint: sh -c "sleep 1 && /usr/local/bin/entrypoint.sh tezos-node --cors-header='content-type' --cors-origin='*' --rpc-addr=[::]:8732 --net-addr=[::]:9733"
    logging:
      # Produce syslogs instead of terminal logs
      driver: "syslog"
      options:
        # Send the logs to syslog (UDP only) server (running on debugger)
        syslog-address: "udp://0.0.0.0:11001"  # Port must match debugger syslog port in 'ports' section
        # Always in same RFC 5424 format (with microseconds precision)
        syslog-format: "rfc5424micro"
    volumes:
      - 'ocaml-shared-data:/var/run/tezos/node'
    ports:
      # should be equal inside docker and outside, because the node tells this port in its connection message,
      # that is how peers can connect to it later
      - '9733:9733'

volumes:
  rust-shared-data:
    external: false
  ocaml-shared-data:
    external: false
