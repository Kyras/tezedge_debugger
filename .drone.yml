kind: pipeline
type: docker
name: metric

steps:
  - name: cadvisor
    image: gcr.io/google-containers/cadvisor:latest
    pull: if-not-exists
    privileged: true
    detach: true
    volumes:
      - name: rootfs
        path: /rootfs:ro
      - name: run
        path: /var/run:rw
      - name: sys
        path: /sys:ro
      - name: docker
        path: /var/lib/docker:ro
    commands:
      - /usr/bin/cadvisor -port=8081

  - name: ocaml-node
    image: tezos/tezos:carthagenet
    pull: if-not-exists
    detach: true
    volumes:
      - name: ocaml-shared-data
        path: /var/run/tezos/node
    commands:
      - sleep 5
      - /usr/local/bin/entrypoint.sh tezos-node --cors-header='content-type' --cors-origin='*' > /dev/null 2>&1

  - name: build
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    environment:
      RUST_BACKTRACE: 1
      CADVISOR_URL: "http://cadvisor:8081"
      DEBUGGER_URL: "http://build:13031"
    volumes:
      - name: ocaml-shared-data
        path: /tmp/volume
    commands:
      - cargo install --bins --path . --root .
      - ./bin/tezedge-debugger &
      - sleep 30  # wait for some metrics to arrive
      - curl "http://build:13031/v2/metric/"
      - cargo test --package tezedge_debugger --test metric -- test_metrics --exact --nocapture

volumes:
  - name: ocaml-shared-data
    temp: {}
  - name: rootfs
    host:
      path: /
  - name: run
    host:
      path: /var/run
  - name: sys
    host:
      path: /sys
  - name: docker
    host:
      path: /var/lib/docker

trigger:
  branch:
    - master
    - dev

---

kind: pipeline
type: docker
name: replay

steps:
  - name: set_server_identity
    image: ubuntu
    pull: if-not-exists
    volumes:
      - name: server-identity
        path: /tmp/volume
      - name: binaries
        path: /tmp/binaries
    commands:
      - cp ./tests/server_identity.json /tmp/volume/identity.json
      - cp ./tests/wait_until.sh /tmp/binaries
  - name: set_client_identity
    image: ubuntu
    pull: if-not-exists
    volumes:
      - name: client-identity
        path: /tmp/volume
    commands:
      - cp ./tests/client_identity.json /tmp/volume/identity.json
  - name: build
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    environment:
      RUST_BACKTRACE: 1
    volumes:
      - name: binaries
        path: /tmp/binaries
    commands:
      - cargo install --bins --path . --root .
      - cp ./bin/* /tmp/binaries
  - name: server
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    detach: true
    volumes:
      - name: binaries
        path: /etc/bin
      - name: server-identity
        path: /tmp/volume
      - name:
    commands:
      - /etc/bin/drone-server
  - name: client
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    environment:
      DEBUGGER_URL: "http://client:13031"
      CADVISOR_URL: "http://cadvisor:8080"
    volumes:
      - name: binaries
        path: /etc/bin
      - name: client-identity
        path: /tmp/volume
      - name: snapshot
        path: /tmp/snapshot
    commands:
      - /etc/bin/tezedge-debugger &
      - sleep 2
      - /etc/bin/drone-client --server server:13030
      - cp -r $(find /tmp/volume/ -type d -name "[0-9]*") /tmp/snapshot/snapshot
      - cargo test
  - name: drone-replay
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    volumes:
      - name: binaries
        path: /etc/bin
      - name: client-identity
        path: /tmp/volume
      - name: snapshot
        path: /tmp/snapshot
    commands:
      - /etc/bin/drone-server &
      - sleep 1
      - /etc/bin/replayer --node-ip "0.0.0.0:13030" --path "/tmp/snapshot/snapshot" --last-message-id 6
  - name: live-replay
    image: simplestakingcom/tezedge:v0.2.0
    pull: if-not-exists
    volumes:
      - name: binaries
        path: /etc/bin
      - name: client-identity
        path: /tmp/volume
      - name: snapshot
        path: /tmp/snapshot
    commands:
      - mkdir /tmp/replay
      - cp -r /tmp/snapshot/snapshot /tmp/replay/
      - cd /home/appuser/tezedge
      - /home/appuser/tezedge/run.sh release --peers 1.1.1.1:1 & # Some random to prevent node from syncing
      - /etc/bin/wait_until.sh
      - /etc/bin/replayer --node-ip "0.0.0.0:9732" --path "/tmp/replay/snapshot" --last-message-id 6

volumes:
  - name: binaries
    temp: {}
  - name: snapshot
    temp: {}
  - name: server-identity
    temp: {}
  - name: client-identity
    temp: {}

trigger:
  branch:
    - master
    - dev
