# legacy v2 http server (optional)
http_v2 = 17732

[[nodes]]
# name of the node, used in http requests as parameter `node_name`
# for example: `http://localhost:17732/v2/p2p?node_name=tezedge&limit=1000`
name = "initiator"
# new v3 http server (optional)
http_v3 = 17742
# path to db
db = "./target/debugger_db/i"
# path to search identity at
# debugger expect the node will listen its p2p incoming connections on this port
# the process which bind a socket on this port first, will be considered as the node
# this is an inner port inside docker's virtual network of the node's container
p2p = { identity = "tezedge-recorder/identity_i.json", port = 29732 }
# debugger will run syslog server on this port
# this is an inner port inside docker's virtual network of the debugger's container
log = { port = 10000 }

[[nodes]]
name = "responder"
http_v3 = 17743
db = "./target/debugger_db/r"
p2p = { identity = "tezedge-recorder/identity_r.json", port = 29733 }

[[nodes]]
name = "tezedge"
http_v3 = 17744
db = "./target/debugger_db/tezedge"
p2p = { identity = "/tmp/volume/tezedge/identity.json", port = 29734 }

[[nodes]]
name = "local_node"
http_v3 = 17745
db = "/volume/debugger_db/tezedge"
p2p = { identity = "../tezedge/light_node/etc/tezedge/identity.json", port = 29735 }

[[nodes]]
name = "limit_test"
http_v3 = 17746
db = "./target/debugger_db/limit_test"
p2p = { identity = "../tezedge/light_node/etc/tezedge/identity.json", port = 29736, store_limit = 10 }
